// Code generated by entc, DO NOT EDIT.

package autor

const (
	// Label holds the string label denoting the autor type in the database.
	Label = "autor"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSignature holds the string denoting the signature field in the database.
	FieldSignature = "signature"

	// EdgeTodos holds the string denoting the todos edge name in mutations.
	EdgeTodos = "todos"

	// Table holds the table name of the autor in the database.
	Table = "autors"
	// TodosTable is the table the holds the todos relation/edge.
	TodosTable = "todos"
	// TodosInverseTable is the table name for the Todo entity.
	// It exists in this package in order to avoid circular dependency with the "todo" package.
	TodosInverseTable = "todos"
	// TodosColumn is the table column denoting the todos relation/edge.
	TodosColumn = "autor_todos"
)

// Columns holds all SQL columns for autor fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldSignature,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
