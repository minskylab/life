// Code generated by entc, DO NOT EDIT.

package todo

const (
	// Label holds the string label denoting the todo type in the database.
	Label = "todo"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDone holds the string denoting the done field in the database.
	FieldDone = "done"

	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"

	// Table holds the table name of the todo in the database.
	Table = "todos"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "todos"
	// OwnerInverseTable is the table name for the Autor entity.
	// It exists in this package in order to avoid circular dependency with the "autor" package.
	OwnerInverseTable = "autors"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "autor_todos"
)

// Columns holds all SQL columns for todo fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldDone,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Todo type.
var ForeignKeys = []string{
	"autor_todos",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
